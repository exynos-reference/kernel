/*
 * Google Peach Pit Rev 6+ board device tree source
 *
 * Copyright (c) 2014 Google, Inc
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>
#include "exynos5420.dtsi"

/ {
	model = "Google Peach Pit Rev 6+";

	compatible = "google,pit-rev16",
		"google,pit-rev15", "google,pit-rev14",
		"google,pit-rev13", "google,pit-rev12",
		"google,pit-rev11", "google,pit-rev10",
		"google,pit-rev9", "google,pit-rev8",
		"google,pit-rev7", "google,pit-rev6",
		"google,pit", "google,peach","samsung,exynos5420",
		"samsung,exynos5";

	memory {
		reg = <0x20000000 0x80000000>;
	};

	fixed-rate-clocks {
		oscclk {
			compatible = "samsung,exynos5420-oscclk";
			clock-frequency = <24000000>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		pinctrl-names = "default";
		pinctrl-0 = <&power_key_irq>;

		power {
			label = "Power";
			gpios = <&gpx1 2 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 1000000 0>;
		brightness-levels = <0 100 500 1000 1500 2000 2500 2800>;
		default-brightness-level = <7>;
		pinctrl-0 = <&pwm0_out>;
		pinctrl-names = "default";
	};

	sound {
		compatible = "google,snow-audio-max98090";

		samsung,i2s-controller = <&i2s0>;
		samsung,audio-codec = <&max98090>;
	};

	usb300_vbus_reg: regulator-usb300 {
		compatible = "regulator-fixed";
		regulator-name = "P5.0V_USB3CON0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gph0 0 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&usb300_vbus_en>;
		enable-active-high;
	};

	usb301_vbus_reg: regulator-usb301 {
		compatible = "regulator-fixed";
		regulator-name = "P5.0V_USB3CON1";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gph0 1 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&usb301_vbus_en>;
		enable-active-high;
	};

	panel_lvds: panel-lvds {
		compatible = "panel-lvds";

		display-timings {
			native-mode = <&timing0>;

			timing0: timing@0 {
				clock-frequency = <70589280>;
				hactive = <1366>;
				vactive = <768>;
				hfront-porch = <40>;
				hback-porch = <40>;
				hsync-len = <32>;
				vback-porch = <10>;
				vfront-porch = <12>;
				vsync-len = <6>;
			};
		};
 	};

	/* Chain regulators to ensure proper Wifi turn on sequence */
	wifi_rst_regulator: wifi-rst-regulator {
		compatible = "regulator-fixed";
		regulator-name = "wifi-rst-l";
		gpio = <&gpx0 1 0>;
		enable-active-high;
		startup-delay-us = <1500>;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_rst>;

		/*
		 * Technically we should have a vin-supply of the 32k clock.
		 * ...but that causes a deferred probe of this regulator
		 * despite the fact that we don't need to enable it until
		 * much later.  Skip the dependency since we know that the
		 * 32k clock will always be kept on from early boot.
		 *
		 * vin-supply = <&en32khz_cp>;
		 */
	};

	wifi_en_regulator: wifi-en-regulator {
		compatible = "regulator-fixed";
		regulator-name = "wifi-en";
		gpio = <&gpx0 0 0>;
		enable-active-high;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_en>;
		vin-supply = <&wifi_rst_regulator>;
	};

	vbat: fixed-regulator {
		compatible = "regulator-fixed";
		regulator-name = "vbat-supply";
		regulator-boot-on;
		regulator-always-on;
	};
};

&pinctrl_0 {
	max98090_irq: max98090-irq {
		samsung,pins = "gpx0-2";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	tpm_irq: tpm-irq {
		samsung,pins = "gpx1-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	power_key_irq: power-key-irq {
		samsung,pins = "gpx1-2";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	hdmi_hpd_irq: hdmi-hpd-irq {
		samsung,pins = "gpx3-7";
		samsung,pin-function = <0>;
		samsung,pin-pud = <1>;
		samsung,pin-drv = <0>;
	};

	dp_hpd_gpio: dp_hpd_gpio {
		samsung,pins = "gpx2-6";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	ps8625_sleep: ps8625-sleep {
		samsung,pins = "gpx3-5";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	ps8625_reset: ps8625-reset {
		samsung,pins = "gpy7-7";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	max77802_irq: max77802-irq {
		samsung,pins = "gpx3-1";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	pmic_dvs_1: pmic-dvs-1 {
		samsung,pins = "gpy7-6";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	wifi_en: wifi-en {
		samsung,pins = "gpx0-0";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	wifi_rst: wifi-rst {
		samsung,pins = "gpx0-1";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	ec_irq: ec-irq {
		samsung,pins = "gpx1-5";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};
	tps65090_irq: tps65090-irq {
		samsung,pins = "gpx2-5";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};
};

&pinctrl_2 {
	pmic_dvs_2: pmic-dvs-2 {
		samsung,pins = "gpj4-2";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	pmic_dvs_3: pmic-dvs-3 {
		samsung,pins = "gpj4-3";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};
};

&pinctrl_3 {
	pmic_selb: pmic-selb {
		samsung,pins = "gph0-2", "gph0-3", "gph0-4", "gph0-5",
			       "gph0-6";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};
};

&pinctrl_3 {
	usb300_vbus_en: usb300-vbus-en {
		samsung,pins = "gph0-0";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	usb301_vbus_en: usb301-vbus-en {
		samsung,pins = "gph0-1";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	ec_spi_cs: ec-spi-cs {
		samsung,pins = "gpb1-2";
		samsung,pin-function = <1>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <3>;
	};
};

&rtc {
	status = "okay";
};

&uart_3 {
	status = "okay";
};

&mmc_0 {
	status = "okay";
	num-slots = <1>;
	broken-cd;
	caps2-mmc-hs200-1_8v;
	supports-highspeed;
	non-removable;
	card-detect-delay = <200>;
	clock-frequency = <400000000>;
	samsung,dw-mshc-ciu-div = <3>;
	samsung,dw-mshc-sdr-timing = <0 4>;
	samsung,dw-mshc-ddr-timing = <0 2>;
	pinctrl-names = "default";
	pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_bus4 &sd0_bus8>;

	slot@0 {
		reg = <0>;
		bus-width = <8>;
	};
};

&mmc_1 {
	/*
	 * The current best way to ensure that reset/enable and clocks
	 * are available before we try to probe the WiFi card is through
	 * a chain of regulators.
	 */
	vmmc-supply = <&wifi_en_regulator>;

	status = "okay";
	num-slots = <1>;
	supports-highspeed;
	keep-power-in-suspend;
	/* non-removable NOT set so mwifiex driver can use reset trick */
	edge-triggered-interrupts;
	broken-cd;
	bypass-smu;
	fifo-depth = <0x40>;
	card-detect-delay = <200>;
	clock-frequency = <400000000>;
	samsung,dw-mshc-ciu-div = <1>;
	samsung,dw-mshc-sdr-timing = <0 1>;
	samsung,dw-mshc-ddr-timing = <0 2>;
	pinctrl-names = "default";
	pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_int &sd1_bus1 &sd1_bus4 &sd1_bus8>;
	slot@0 {
		reg = <0>;
		bus-width = <4>;
	};
};

&mmc_2 {
	status = "okay";
	num-slots = <1>;
	supports-highspeed;
	card-detect-delay = <200>;
	clock-frequency = <400000000>;
	samsung,dw-mshc-ciu-div = <3>;
	samsung,dw-mshc-sdr-timing = <2 3>;
	samsung,dw-mshc-ddr-timing = <1 2>;
	pinctrl-names = "default";
	pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_cd &sd2_bus4>;

	slot@0 {
		reg = <0>;
		bus-width = <4>;
	};
};

&hsi2c_7 {
	status = "okay";

	max98090: codec@10 {
		compatible = "maxim,max98090";
		reg = <0x10>;
		interrupts = <2 0>;
		interrupt-parent = <&gpx0>;
		pinctrl-names = "default";
		pinctrl-0 = <&max98090_irq>;
	};
};

&hsi2c_9 {
	status = "okay";
	clock-frequency = <400000>;

	tpm@20 {
		compatible = "infineon,slb9645tt";
		reg = <0x20>;

		/* Unused irq; but still need to configure the pins */
		pinctrl-names = "default";
		pinctrl-0 = <&tpm_irq>;
	};
};

&i2c_2	{
	status = "okay";
	samsung,i2c-sda-delay = <100>;
	samsung,i2c-max-bus-freq = <66000>;
	samsung,i2c-slave-addr = <0x50>;
};

&hdmi {
	status = "okay";
	hpd-gpio = <&gpx3 7 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&hdmi_hpd_irq>;
	ddc = <&i2c_2>;
};

&usbdrd_phy0 {
	vbus-supply = <&usb300_vbus_reg>;
};

&usbdrd_phy1 {
	vbus-supply = <&usb301_vbus_reg>;
};

/*
 * Use longest HW watchdog in SoC (32 seconds) since the hardware
 * watchdog provides no debugging information (compared to soft/hard
 * lockup detectors) and so should be last resort.
 */
&watchdog {
	timeout-sec = <32>;
};

&i2s0 {
	status = "okay";
};

&fimd {
	status = "okay";
	samsung,invert-vclk;
};

&dp {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dp_hpd_gpio>;
	samsung,color-space = <0>;
	samsung,dynamic-range = <0>;
	samsung,ycbcr-coeff = <0>;
	samsung,color-depth = <1>;
	samsung,link-rate = <0x06>;
	samsung,lane-count = <2>;
	samsung,hpd-gpio = <&gpx2 6 0>;
	edp-panel = <&panel_lvds>;

	display-timings {
		native-mode = <&timing1>;

		timing1: timing@1 {
			clock-frequency = <70589280>;
			hactive = <1366>;
			vactive = <768>;
			hfront-porch = <40>;
			hback-porch = <40>;
			hsync-len = <32>;
			vback-porch = <10>;
			vfront-porch = <12>;
			vsync-len = <6>;
		};
	};
};

&hsi2c_4 {
	status = "okay";
	clock-frequency = <400000>;

	max77802-pmic@9 {
		compatible = "maxim,max77802";
		interrupt-parent = <&gpx3>;
		interrupts = <1 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&max77802_irq>, <&pmic_selb>,
			    <&pmic_dvs_1>, <&pmic_dvs_2>, <&pmic_dvs_3>;
		wakeup-source;
		reg = <0x9>;

		/* Using idx 1 means warm reset will get good voltage */
		max77xxx,pmic-buck-default-dvs-idx = <1>;
		max77xxx,pmic-buck-dvs-gpios = <&gpy7 6 0>,
					       <&gpj4 2 0>,
					       <&gpj4 3 0>;
		max77xxx,pmic-buck-selb-gpios = <&gph0 2 0>,
						<&gph0 3 0>,
						<&gph0 4 0>,
						<&gph0 5 0>,
						<&gph0 6 0>;

		voltage-regulators {
			ldo1_reg: LDO1 {
				regulator-name = "vdd_1v0";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
				regulator-op-mode = <2>;
			};

			ldo2_reg: LDO2 {
				regulator-name = "vdd_1v2_2";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
			};

			ldo3_reg: LDO3 {
				regulator-name = "vdd_1v8_3";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <2>;
			};

			vqmmc_sdcard: ldo4_reg: LDO4 {
				regulator-name = "vdd_sd";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <2800000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo5_reg: LDO5 {
				regulator-name = "vdd_1v8_5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo6_reg: LDO6 {
				regulator-name = "vdd_1v8_6";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo7_reg: LDO7 {
				regulator-name = "vdd_1v8_7";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			ldo8_reg: LDO8 {
				regulator-name = "vdd_ldo8";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo9_reg: LDO9 {
				regulator-name = "vdd_ldo9";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <2>;
			};

			ldo10_reg: LDO10 {
				regulator-name = "vdd_ldo10";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo11_reg: LDO11 {
				regulator-name = "vdd_ldo11";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <2>;
			};

			ldo12_reg: LDO12 {
				regulator-name = "vdd_ldo12";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo13_reg: LDO13 {
				regulator-name = "vdd_ldo13";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <2>;
			};

			ldo14_reg: LDO14 {
				regulator-name = "vdd_ldo14";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo15_reg: LDO15 {
				regulator-name = "vdd_ldo15";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo17_reg: LDO17 {
				regulator-name = "vdd_g3ds";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1400000>;
				regulator-always-on;
				regulator-op-mode = <1>;
			};

			ldo18_reg: LDO18 {
				regulator-name = "ldo_18";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			ldo19_reg: LDO19 {
				regulator-name = "ldo_19";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			ldo20_reg: LDO20 {
				regulator-name = "ldo_20";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-op-mode = <0>;
			};

			ldo21_reg: LDO21 {
				regulator-name = "ldo_21";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
			};

			ldo23_reg: LDO23 {
				regulator-name = "ld0_23";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
			};

			ldo24_reg: LDO24 {
				regulator-name = "ldo_24";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
			};

			ldo25_reg: LDO25 {
				regulator-name = "ldo_25";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
			};

			ldo26_reg: LDO26 {
				regulator-name = "ldo_26";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
			};

			ldo27_reg: LDO27 {
				regulator-name = "ldo_27";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
			};

			ldo28_reg: LDO28 {
				regulator-name = "ldo_28";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			ldo29_reg: LDO29 {
				regulator-name = "ldo_29";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			ldo30_reg: LDO30 {
				regulator-name = "vdd_mifs";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1300000>;
				regulator-op-mode = <1>;
				regulator-always-on;
			};

			ldo32_reg: LDO32 {
				regulator-name = "ldo_32";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
			};

			ldo33_reg: LDO33 {
				regulator-name = "ldo_33";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
			};

			ldo34_reg: LDO34 {
				regulator-name = "ldo_34";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
			};

			ldo35_reg: LDO35 {
				regulator-name = "ldo_35";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
			};

			buck1_reg: BUCK1 {
				regulator-name = "vdd_mif";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1300000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
				regulator-ramp-delay = <12500>;
			};

			buck2_reg: BUCK2 {
				regulator-name = "vdd_arm";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
				regulator-ramp-delay = <12500>;
			};

			buck3_reg: BUCK3 {
				regulator-name = "vdd_int";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1400000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
				regulator-ramp-delay = <12500>;
			};

			buck4_reg: BUCK4 {
				regulator-name = "vdd_g3d";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1400000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
				regulator-ramp-delay = <12500>;
			};

			buck5_reg: BUCK5 {
				regulator-name = "vdd_1v2";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
			};

			buck6_reg: BUCK6 {
				regulator-name = "vdd_kfc";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
				regulator-ramp-delay = <12500>;
			};

			buck7_reg: BUCK7 {
				regulator-name = "vdd_1v35";
				regulator-min-microvolt = <1350000>;
				regulator-max-microvolt = <1350000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <3>;
			};

			buck8_reg: BUCK8 {
				regulator-name = "vdd_emmc";
				regulator-min-microvolt = <2850000>;
				regulator-max-microvolt = <2850000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <1>;
			};

			buck9_reg: BUCK9 {
				regulator-name = "vdd_2v";
				regulator-min-microvolt = <2000000>;
				regulator-max-microvolt = <2000000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <3>;
			};

			buck10_reg: BUCK10 {
				regulator-name = "vdd_1v8";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-op-mode = <3>;
			};

			en32khz_ap: EN32KHZ_AP {
				regulator-name = "en32khz_ap";
				regulator-always-on;
			};

			en32khz_cp: EN32KHZ_CP {
				regulator-name = "en32khz_cp";
				regulator-always-on;
			};
		};

		maxim_rtc: rtc {
		};
	};
};

&hsi2c_7 {
	status = "okay";

	ps8625-bridge@48 {
		compatible = "parade,ps8625";
		reg = <0x48>;
		sleep-gpio = <&gpx3 5 0>;
		reset-gpio = <&gpy7 7 0>;
		lane-count = <2>;
		pinctrl-names = "default";
		pinctrl-0 = <&ps8625_sleep &ps8625_reset>;

		display-timings {
			native-mode = <&timing1>;
		};
	};
};

&spi_2 {
	status = "okay";
	samsung,spi-src-clk = <0>;
	num-cs = <1>;
	cs-gpios = <&gpb1 2 0>;

	ec: cros-ec@0 {
		compatible = "google,cros-ec-spi";

		spi-max-frequency = <4000000>;

		pinctrl-names = "default";
		pinctrl-0 = <&ec_spi_cs &ec_irq>;

		reg = <0>;
		interrupts = <5 0>;
		interrupt-parent = <&gpx1>;

			google,cros-ec-spi-msg-delay = <2000>;
		controller-data {
			samsung,spi-feedback-delay = <2>;
		};

		/* Arbitrarily assign bus 20 since past exynos range */
		i2c_20: i2c-tunnel {
			compatible = "google,cros-ec-i2c-tunnel";
			#address-cells = <1>;
			#size-cells = <0>;

			google,remote-bus = <0>;
			power-regulator@48 {
				compatible = "ti,tps65090";
				reg = <0x48>;

				/*
				 * Config irq to disable internal pulls
				 * even though we run in polling mode.
				 */
				pinctrl-names = "default";
				pinctrl-0 = <&tps65090_irq>;

				vsys1-supply = <&vbat>;
				vsys2-supply = <&vbat>;
				vsys3-supply = <&vbat>;
				infet1-supply = <&vbat>;
				infet2-supply = <&vbat>;
				infet3-supply = <&vbat>;
				infet4-supply = <&vbat>;
				infet5-supply = <&vbat>;
				infet6-supply = <&vbat>;
				infet7-supply = <&vbat>;
				vsys-l1-supply = <&vbat>;
				vsys-l2-supply = <&vbat>;

				regulators {
					dcdc1 {
						ti,enable-ext-control;
					};
					dcdc2 {
						ti,enable-ext-control;
					};
					dcdc3 {
						ti,enable-ext-control;
					};
					fet1 {
						regulator-name = "vcd_led";
					};
					tps65090_fet2: fet2 {
						regulator-name = "video_mid";
						regulator-always-on;
					};
					fet3 {
						regulator-name = "wwan_r";
						regulator-always-on;
					};
					fet4 {
						regulator-name = "sdcard";
						regulator-always-on;
					};
					tps65090_fet5: fet5 {
						regulator-name = "camout";
					};
					fet6 {
						regulator-name = "lcd_vdd";
					};
					tps65090_fet7: fet7 {
						regulator-name = "video_mid_1a";
						regulator-always-on;
					};
					ldo1 {
					};
					ldo2 {
					};
				};

				charger {
					compatible = "ti,tps65090-charger";
				};
			};

			battery: sbs-battery@b {
				compatible = "sbs,sbs-battery";
				reg = <0xb>;
				sbs,poll-retry-count = <1>;
				sbs,i2c-retry-count = <2>;
			};
		};

		cros-ec-keyb {
			compatible = "google,cros-ec-keyb";
			keypad,num-rows = <8>;
			keypad,num-columns = <13>;
			google,needs-ghost-filter;

			/*
			 * Keymap entries take the form of 0xRRCCKKKK where
			 * RR=Row CC=Column KKKK=Key Code
			 * The values below are for a US keyboard layout and
			 * are taken from the Linux driver. Note that the
			 * 102ND key is not used for US keyboards.
			 */
			linux,keymap = <0x0001007d	/* L_META */
					0x0002003b	/* F1 */
					0x00030030	/* B */
					0x00040044	/* F10 */
					0x00060031	/* N */
					0x0008000d	/* = */
					0x000a0064	/* R_ALT */

					0x01010001	/* ESC */
					0x0102003e	/* F4 */
					0x01030022	/* G */
					0x01040041	/* F7 */
					0x01060023	/* H */
					0x01080028	/* ' */
					0x01090043	/* F9 */
					0x010b000e	/* BKSPACE */

					0x0200001d	/* L_CTRL */
					0x0201000f	/* TAB */
					0x0202003d	/* F3 */
					0x02030014	/* T */
					0x02040040	/* F6 */
					0x0205001b	/* ] */
					0x02060015	/* Y */
					0x02070056	/* 102ND */
					0x0208001a	/* [ */
					0x02090042	/* F8 */

					0x03010029	/* GRAVE */
					0x0302003c	/* F2 */
					0x03030006	/* 5 */
					0x0304003f	/* F5 */
					0x03060007	/* 6 */
					0x0308000c	/* - */
					0x030b002b	/* \ */

					0x04000061	/* R_CTRL */
					0x0401001e	/* A */
					0x04020020	/* D */
					0x04030021	/* F */
					0x0404001f	/* S */
					0x04050025	/* K */
					0x04060024	/* J */
					0x04080027	/* ; */
					0x04090026	/* L */
					0x040a002b	/* \ */
					0x040b001c	/* ENTER */

					0x0501002c	/* Z */
					0x0502002e	/* C */
					0x0503002f	/* V */
					0x0504002d	/* X */
					0x05050033	/* , */
					0x05060032	/* M */
					0x0507002a	/* L_SHIFT */
					0x05080035	/* / */
					0x05090034	/* . */
					0x050B0039	/* SPACE */

					0x06010002	/* 1 */
					0x06020004	/* 3 */
					0x06030005	/* 4 */
					0x06040003	/* 2 */
					0x06050009	/* 8 */
					0x06060008	/* 7 */
					0x0608000b	/* 0 */
					0x0609000a	/* 9 */
					0x060a0038	/* L_ALT */
					0x060b006c	/* DOWN */
					0x060c006a	/* RIGHT */

					0x070000ec	/* BATTERY key on some HW */
					0x07010010	/* Q */
					0x07020012	/* E */
					0x07030013	/* R */
					0x07040011	/* W */
					0x07050017	/* I */
					0x07060016	/* U */
					0x07070036	/* R_SHIFT */
					0x07080019	/* P */
					0x07090018	/* O */
					0x070b0067	/* UP */
					0x070c0069>;	/* LEFT */
		};
	};
};
